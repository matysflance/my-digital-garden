---
import MainLayout from '@layouts/Main.astro';
import PostsList from '@components/PostsList.astro';

import type { TBlogPostFrontmatter, TBlogPost } from '@types';

export async function getStaticPaths() {
  const blogPosts = await Astro.glob<TBlogPostFrontmatter>(
    '../posts/*.md'
  );

  const allTags = blogPosts
    .map((post) => post.frontmatter.tags)
    .flat();
  const uniqueTags = [...new Set(allTags)];

  return uniqueTags.map((tag) => {
    const tagPosts = blogPosts.filter((post) => {
      return post.frontmatter.tags.includes(tag);
    });

    const sortedTagPosts = tagPosts.sort((a, b) => {
      if (a.frontmatter.pubDate > b.frontmatter.pubDate) {
        return -1;
      }

      if (a.frontmatter.pubDate < b.frontmatter.pubDate) {
        return 1;
      }

      return 0;
    });

    return {
      params: { tag },
      props: { sortedTagPosts },
    };
  });
}

type Props = {
  sortedTagPosts: TBlogPost[];
};
const { tag } = Astro.params;
const { sortedTagPosts } = Astro.props;
---

<MainLayout title={`${tag} posts`}>
  <p>Posts tagged with {tag}</p>
  <PostsList posts={sortedTagPosts} />
</MainLayout>
