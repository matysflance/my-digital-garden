---
// TODO: figure out why TS alias didn't work here
import MainLayout from '../../layouts/Main.astro';
import PostsList from '../../components/PostsList.astro';

import type { TBlogPostFrontmatter, TBlogPost } from '../../types';

export async function getStaticPaths() {
  const blogPosts = await Astro.glob<TBlogPostFrontmatter>(
    '../posts/*.md'
  );

  // this gets all tags possible, so that these don't have to be hardcoded anywhere
  const tags: string[] = blogPosts.reduce(
    (acc: string[], post: TBlogPost) => {
      if (post.frontmatter.tags) {
        return [...acc, ...post.frontmatter.tags];
      } else {
        return acc;
      }
    },
    []
  );

  return tags.map((tag) => {
    return {
      params: { tag: tag },
      props: { posts: blogPosts },
    };
  });
}

type Props = {
  posts: TBlogPost[];
};
const { tag } = Astro.params;
const { posts } = Astro.props;

const filteredPosts: TBlogPost[] = posts.filter((post) => {
  if (!tag) {
    return false;
  }

  return post.frontmatter.tags?.includes(tag);
});
---

<MainLayout title={`${tag} posts`}>
  <p>Posts tagged with {tag}</p>
  <PostsList posts={filteredPosts} />
</MainLayout>
